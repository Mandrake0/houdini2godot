import hou
import houdini2godot as hg


def create_mesh(node_current, node_name, node_export_path):
       
    # Export File
    export_node = hou.node("./ropnet/export")
    export_node.parm("soppath").set(node_current.path())
    export_node.parm("sopoutput").set(node_export_path)
    export_node.render()
    
    # Cleanup
    export_node.parm("soppath").set("")
    export_node.parm("sopoutput").set("")


def run_export():
    # Godot Node
    node = hou.pwd()
    
    
    print "\nRunning Exporter\n"
    print "=======================\n"
    list = ["selectedObjects","projectFolder", "sceneFolder", "meshFolder"]
    for l in list:
        value = node.parm(l).eval()
        print l + ": " + value + "\n" 
        if value == "":
            hou.ui.displayMessage("There is no Value in " + l, severity=hou.severityType.Error)
            return
    print "======================="
    
    # Get Global Parameters
    exp_data_so = node.parm("selectedObjects").eval()
    exp_data_pf = node.parm("projectFolder").eval()
    exp_data_sf = node.parm("sceneFolder").eval()
    exp_data_mf = node.parm("meshFolder").eval()
    
    # Get Nodes by Pattern
    nodes_list = hou.node("/").glob(exp_data_so)
    # print nodes_list
    
    for node_current in nodes_list:
        node_type = node_current.type().name()
        # Selects only Nodes with Geo Attribute          
        if node_type == "geo":
            # Create File pathname
            
            node_name = node_current.name()
            node_export_path = node.parm("meshFolder").eval() + node_name + ".obj"
            print node.parm("meshFolder").eval()
            
            # create_mesh(node_current, node_name, node_export_path)
            
            # Get Export Type for Scene File
            exp_data_et = node_current.parm("exportType") 
            
            hg_exp = hg.Export()
            
            if exp_data_et == "":
                hou.ui.displayMessage("There is no Godot Parameter in this Node", severity=hou.severityType.Error)
                return
            et_value = exp_data_et.eval()
            if et_value == 0: # Export Scene and Obj
                create_mesh(node_current, node_name, node_export_path)
                hg_exp.create_scene_file(node_export_path, exp_data_sf + "\\" + node_name ,".tscn", node_name)
            if et_value == 1:
                hg_exp.create_scene_file(node_export_path, exp_data_sf + "\\" + node_name ,".tscn", node_name )
                
            if et_value == 2:
                create_mesh(node_current, node_name, node_export_path)
                
            if et_value == 3:
                return
    
